mutate(Head_radius_mm = Head_diameter_mm/2,
Head_diffusion_rate = Days_stained/Head_radius_mm) %>%
arrange(Taxon_family, Genus, Species)
### Summarise specimen data
dat %>% group_by(Taxon_family) %>% count() # total number of specimens per family
mean(dat$Head_diffusion_rate) # mean rate of iodine diffusion for the head
sd(dat$Head_diffusion_rate)
### Relationship between staining and specimen size
## Linear regression
head <- lm(log(Days_stained) ~ log(Head_radius_mm), dat) # head radius linear model
head_r2 <- round(summary(head)$r.squared, 2) # save r squared value
mass <- lm(log(Days_stained) ~ log(Mass_g), dat) # mass
mass_r2 <- round(summary(mass)$r.squared, 2)
svl <- lm(log(Days_stained) ~ log(SVL_mm), dat) # svl
svl_r2 <- round(summary(svl)$r.squared, 2)
age <- lm(log(Days_stained) ~ log(Preservation_age), dat)
## Summary of lm
summary(head)
coef(head)
confint(head)
summary(mass)
summary(svl)
summary(age)
# days~head
phead <- dat %>%
ggplot(aes(x = Head_radius_mm, y = Days_stained)) +
geom_point(shape = 1, size = 2) +
geom_smooth(method = "lm", alpha = .2, colour = "grey20") + # add linear model line
scale_y_continuous(breaks = seq(min(dat$Days_stained), max(dat$Days_stained), by = 3), limits = c(3,12)) +
scale_x_continuous(breaks = round(seq(min(dat$Head_radius_mm), max(dat$Head_radius_mm), by = 3), 0)) +
annotate("text", x = 2.5, y = 10, label = paste("italic(R) ^ 2 == ", head_r2), parse = TRUE) +
labs(x = "Head radius (mm)", y = "Staining duration (d)") + # plot labels
theme_half_open() +
theme(plot.margin = unit(c(1,0.5,0.5,0.5), "cm"),
axis.line = element_line(size = 1))
# days~mass
pmass  <- dat %>%
ggplot(aes(x = log(Mass_g), y = Days_stained)) +
geom_point(shape = 1, size = 2) +
geom_smooth(method = "lm", alpha = .2, colour = "grey20") +
scale_y_continuous(breaks = seq(min(dat$Days_stained), max(dat$Days_stained), by = 3), limits = c(3,12)) +
annotate("text", x = 2, y = 10, label = paste("italic(R) ^ 2 == ", mass_r2), parse = TRUE) +
labs(x = "ln Mass", y = "Staining duration (d)") +
theme_half_open() +
theme(plot.margin = unit(c(1,0.5,0.5,0.5), "cm"),
axis.line = element_line(size = 1))
# days~svl
psvl  <- dat %>%
drop_na(SVL_mm) %>%
ggplot(aes(x = SVL_mm, y = Days_stained)) +
geom_point(shape = 1, size = 2) +
geom_smooth(method = "lm", alpha = .2, colour = "grey20") +
scale_y_continuous(breaks = seq(min(dat$Days_stained), max(dat$Days_stained), by = 3), limits = c(3,12)) +
xlim(230, 1840) +
annotate("text", x = 300, y = 10, label = paste("italic(R) ^ 2 == ", svl_r2), parse = TRUE) +
labs(x = "SVL (mm)", y = "Staining duration (d)") +
theme_half_open() +
theme(plot.margin = unit(c(1,0.5,0.5,0.5), "cm"),
axis.line = element_line(size = 1))
# days~age
dat %>%
drop_na(Preservation_age) %>%
ggplot(aes(x = log(Preservation_age), y = Days_stained)) +
geom_point(shape = 1, size = 2) +
#geom_smooth(method = "lm", alpha = .2, colour = "grey20") +
scale_y_continuous(breaks = seq(min(dat$Days_stained), max(dat$Days_stained), by = 3), limits = c(3,12)) +
#scale_x_continuous(breaks = seq(min(0.5), max(5), by = 0.5), limits = c(0.5,5)) +
#xlim(230, 1840) +
labs(x = "Specimen age (years)", y = "Staining duration (d)") +
theme_half_open() +
theme(plot.margin = unit(c(1,0.5,0.5,0.5), "cm"),
axis.line = element_line(size = 1))
# Combine plots to make complete Figure
all_plots <- plot_grid(phead, psvl, pmass, ncol = 1, labels = c("(a)", "(b)", "(c)"))
all_plots
# Save plot
ggsave(filename = "fig_5.png",
device = "png",
path = normalizePath(dir_plots),
plot = all_plots,
width = 125,
height = 295,
units = "mm")
# days~svl
psvl  <- dat %>%
drop_na(SVL_mm) %>%
ggplot(aes(x = SVL_mm, y = Days_stained)) +
geom_point(shape = 1, size = 2) +
geom_smooth(method = "lm", alpha = .2, colour = "grey20") +
scale_y_continuous(breaks = seq(min(dat$Days_stained), max(dat$Days_stained), by = 3), limits = c(3,12)) +
xlim(230, 1840) +
annotate("text", x = 320, y = 10, label = paste("italic(R) ^ 2 == ", svl_r2), parse = TRUE) +
labs(x = "SVL (mm)", y = "Staining duration (d)") +
theme_half_open() +
theme(plot.margin = unit(c(1,0.5,0.5,0.5), "cm"),
axis.line = element_line(size = 1))
# Combine plots to make complete Figure
all_plots <- plot_grid(phead, psvl, pmass, ncol = 1, labels = c("(a)", "(b)", "(c)"))
all_plots
# Save plot
ggsave(filename = "fig_5.png",
device = "png",
path = normalizePath(dir_plots),
plot = all_plots,
width = 125,
height = 295,
units = "mm")
## Load in raw gray value data
# I had to manually change some of the file names to make sure this worked
gv <- list.files(path = dir_gv, pattern = ".csv", full.names = TRUE) %>%
set_names(str_remove(string = basename(.), pattern = "raw.csv")) %>%
map(read.csv, stringsAsFactors = FALSE) %>%
bind_rows(.id = "sample") %>%
separate(col = "sample", into = c("Museum", "Collection", "Specimen_ID"), sep = "-", extra = "merge") %>%
separate(col = "Specimen_ID", into = c("Specimen_ID", "Genus_species"), sep = "_", extra = "drop") %>%
#separate(col = "Genus_species", into = c("Genus", "Species"), sep = "-", extra = "merge") %>%
select(Museum, Specimen_ID, Genus_species, Gray_value = `ï..Gray.value`, Voxel_count = `Voxel.count`) %>%
mutate(Gray_value = str_remove(string = Gray_value, pattern = "> ")) %>%
mutate(Genus_species = str_replace(string = Genus_species, pattern = "-", replacement = "_")) %>%
mutate(Museum = str_to_upper(Museum))
# Change char class to numeric for some columns
gv$Gray_value <- as.numeric(gv$Gray_value)
gv$Gray_value <- round(gv$Gray_value)
gv$Specimen_ID <- as.numeric(gv$Specimen_ID)
# Join gray value data with specimen info
# Join gray value data with specimen info
box_p <- gv %>%
full_join(specimens)
# Join gray value data with specimen info
# Join gray value data with specimen info
box_p <- gv %>%
full_join(dat)
head(box_p)
tail(box_p)
## boxplot
box_p %>%
filter(Voxel_count < 2500) %>%
ggplot(aes(reorder(G_species, Voxel_count), Voxel_count, fill = Days_stained)) +
geom_boxplot(shape = 1) +
scale_fill_viridis_c(alpha=0.6, breaks = seq(3,12, by = 2), direction = -1, option = "inferno") +
#geom_text(aes(label = Days_stained), position=position_dodge(width=0.9), vjust=-0.25) +
theme_classic() +
labs(x = "", y = "", fill = "Days") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, face = "italic", size = 25),
axis.line.x = element_line(colour = 'black', size = 2),
axis.ticks.x = element_line(colour = "black", size = 2),
axis.line.y = element_line(colour = 'black', size = 2),
axis.ticks.y = element_line(colour = "black", size = 2),
text = element_text(size = 20))
## boxplot
box_p %>%
filter(Voxel_count < 2500) %>%
ggplot(aes(reorder(G_species, Voxel_count), Voxel_count)) +
geom_boxplot(shape = 1) +
scale_fill_viridis_c(alpha=0.6, breaks = seq(3,12, by = 2), direction = -1, option = "inferno") +
#geom_text(aes(label = Days_stained), position=position_dodge(width=0.9), vjust=-0.25) +
theme_classic() +
labs(x = "", y = "", fill = "Days") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, face = "italic", size = 25),
axis.line.x = element_line(colour = 'black', size = 2),
axis.ticks.x = element_line(colour = "black", size = 2),
axis.line.y = element_line(colour = 'black', size = 2),
axis.ticks.y = element_line(colour = "black", size = 2),
text = element_text(size = 20))
box_p %>%
filter(Voxel_count < 2500) %>%
ggplot(aes(reorder(G_species, Voxel_count), Voxel_count)) +
geom_boxplot(shape = 1
)
## boxplot
box_p %>%
filter(Voxel_count < 2500) %>%
ggplot(aes(G_species, Voxel_count)) +
geom_boxplot(shape = 1)
updateR()
install.packages("installR")
install.packages("installr")
updateR()
library(installr)
updateR()
library(tidyverse)
library(magrittr)
library(ggplot2)
library(cowplot)
library(RColorBrewer)
library(grid)
library(viridisLite)
### Set working dir
### Type in  your own path in the quotation marks
dir <- "C:/Users/jmcr/Documents/guide-diceCT-snakes/data/" # specimen list location
dir_gv <- "C:/Users/jmcr/Documents/guide-diceCT-snakes/data/Raw_grayValue_data/" # grayvalue location
dir_plots <- "C:/Users/jmcr/Documents/guide-diceCT-snakes/plots/"
### Load data
# Loads in datasheet with specimen list (includes taxonomy, staining duration and size measurements)
dat <- read_csv(paste0(dir, "specimen_list.csv"), col_names = TRUE) %>%
select(Taxon_family, Genus, Species, G_species, RAB = `RAB #`, Taxon_name, Taxon_ID, Museum, Specimen = `Specimen #`,
SVL_mm, Mass_g, Head_diameter_mm = HeadGirth_mm, Days_stained = `Days Stained`, Preservation_age) %>%
mutate(Head_radius_mm = Head_diameter_mm/2,
Head_diffusion_rate = Days_stained/Head_radius_mm) %>%
arrange(Taxon_family, Genus, Species)
### Summarise specimen data
dat %>% group_by(Taxon_family) %>% count() # total number of specimens per family
mean(dat$Head_diffusion_rate) # mean rate of iodine diffusion for the head
sd(dat$Head_diffusion_rate)
## Load in raw gray value data
# I had to manually change some of the file names to make sure this worked
gv <- list.files(path = dir_gv, pattern = ".csv", full.names = TRUE) %>%
set_names(str_remove(string = basename(.), pattern = "raw.csv")) %>%
map(read.csv, stringsAsFactors = FALSE) %>%
bind_rows(.id = "sample") %>%
separate(col = "sample", into = c("Museum", "Collection", "Specimen_ID"), sep = "-", extra = "merge") %>%
separate(col = "Specimen_ID", into = c("Specimen_ID", "Genus_species"), sep = "_", extra = "drop") %>%
#separate(col = "Genus_species", into = c("Genus", "Species"), sep = "-", extra = "merge") %>%
select(Museum, Specimen_ID, Genus_species, Gray_value = `ï..Gray.value`, Voxel_count = `Voxel.count`) %>%
mutate(Gray_value = str_remove(string = Gray_value, pattern = "> ")) %>%
mutate(Genus_species = str_replace(string = Genus_species, pattern = "-", replacement = "_")) %>%
mutate(Museum = str_to_upper(Museum))
# Change char class to numeric for some columns
gv$Gray_value <- as.numeric(gv$Gray_value)
gv$Gray_value <- round(gv$Gray_value)
gv$Specimen_ID <- as.numeric(gv$Specimen_ID)
# Join gray value data with specimen info
box_p <- subset(gv, Voxel_count <2500)
head(box_p)
tail(box_p)
box_p <- box_p %>%
full_join(dat)
head(box_p)
tail(box_p)
## boxplot
box_p %>%
ggplot(aes(G_species, Voxel_count)) +
geom_boxplot()
## boxplot
box_p %>%
ggplot(aes(Genus_species, Voxel_count)) +
geom_boxplot()
View(box_p)
ggplot(aes(reorder(Genus_species, Voxel_count), Voxel_count) +
## boxplot
box_p %>%
ggplot(aes(reorder(Genus_species, Voxel_count), Voxel_count)) +
geom_boxplot()
)
## boxplot
box_p %>%
ggplot(aes(reorder(Genus_species, Voxel_count), Voxel_count)) +
geom_boxplot()
## boxplot
box_p %>%
ggplot(aes(reorder(Genus_species, Voxel_count), Voxel_count)) +
geom_boxplot(shape = 1)
## boxplot
box_p %>%
ggplot(aes(reorder(Genus_species, Voxel_count), Voxel_count, fill = Days_stained)) +
geom_boxplot(shape = 1)
## boxplot
box_p %>%
ggplot(aes(reorder(Genus_species, Voxel_count), Voxel_count, fill = Days_stained)) +
geom_boxplot(shape = 1) +
scale_fill_viridis_c(alpha=0.6, breaks = seq(3,12, by = 2), direction = -1, option = "inferno") +
#geom_text(aes(label = Days_stained), position=position_dodge(width=0.9), vjust=-0.25) +
theme_classic()
## boxplot
box_p %>%
ggplot(aes(reorder(Genus_species, Voxel_count), Voxel_count, fill = Days_stained)) +
geom_boxplot(shape = 1) +
scale_fill_viridis_c(alpha=0.6, breaks = seq(3,12, by = 2), direction = -1, option = "inferno") +
#geom_text(aes(label = Days_stained), position=position_dodge(width=0.9), vjust=-0.25) +
theme_classic() +
labs(x = "", y = "", fill = "Days") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, face = "italic", size = 25),
axis.line.x = element_line(colour = 'black', size = 2),
axis.ticks.x = element_line(colour = "black", size = 2),
axis.line.y = element_line(colour = 'black', size = 2),
axis.ticks.y = element_line(colour = "black", size = 2),
text = element_text(size = 20))
## boxplot
box_p %>%
ggplot(aes(reorder(Genus_species, Voxel_count), Voxel_count, fill = factor(Days_stained))) +
geom_boxplot(shape = 1) +
scale_fill_viridis_c(alpha=0.6, breaks = seq(3,12, by = 2), direction = -1, option = "inferno")
## boxplot
box_p %>%
ggplot(aes(reorder(Genus_species, Voxel_count), Voxel_count, fill = factor(Days_stained))) +
geom_boxplot(shape = 1)
View(box_p)
View(dat)
View(box_p)
View(dat)
View(box_p)
### Load data
# Loads in datasheet with specimen list (includes taxonomy, staining duration and size measurements)
dat <- read_csv(paste0(dir, "specimen_list.csv"), col_names = TRUE) %>%
select(Taxon_family, Genus, Species, G_species, RAB = `RAB #`, Taxon_name, Taxon_ID, Museum, Specimen_ID = `Specimen #`,
SVL_mm, Mass_g, Head_diameter_mm = HeadGirth_mm, Days_stained = `Days Stained`, Preservation_age) %>%
mutate(Head_radius_mm = Head_diameter_mm/2,
Head_diffusion_rate = Days_stained/Head_radius_mm) %>%
arrange(Taxon_family, Genus, Species)
# Join gray value data with specimen info
box_p <- subset(gv, Voxel_count <2500)
box_p <- box_p %>%
full_join(dat)
View(box_p)
head(box_p)
tail(box_p)
unique(gv$Specimen_ID)
unique(gv$Genus_species)
unique(gv$Specimen_ID)
unique(gv$Genus_species)
unique(box_p$Genus_species)
View(dat)
# Join gray value data with specimen info
box_p <- subset(gv, Voxel_count <2500)
box_p <- box_p %>%
full_join(dat)
head(box_p)
tail(box_p)
## Load in raw gray value data
gv <- list.files(path = dir_gv, pattern = ".csv", full.names = TRUE) %>%
set_names(str_remove(string = basename(.), pattern = "raw.csv")) %>%
map(read.csv, stringsAsFactors = FALSE) %>%
bind_rows(.id = "sample") %>%
separate(col = "sample", into = c("Museum", "Collection", "Specimen_ID"), sep = "-", extra = "merge") %>%
separate(col = "Specimen_ID", into = c("Specimen_ID", "Genus_species"), sep = "_", extra = "drop") %>%
#separate(col = "Genus_species", into = c("Genus", "Species"), sep = "-", extra = "merge") %>%
select(Museum, Specimen_ID, Genus_species, Gray_value = `ï..Gray.value`, Voxel_count = `Voxel.count`) %>%
mutate(Gray_value = str_remove(string = Gray_value, pattern = "> ")) %>%
mutate(Genus_species = str_replace(string = Genus_species, pattern = "-", replacement = "_")) %>%
mutate(Museum = str_to_upper(Museum))
# Change char class to numeric for some columns
gv$Gray_value <- as.numeric(gv$Gray_value)
gv$Gray_value <- round(gv$Gray_value)
gv$Specimen_ID <- as.numeric(gv$Specimen_ID)
# Join gray value data with specimen info
box_p <- subset(gv, Voxel_count <2500)
box_p <- box_p %>%
full_join(dat)
head(box_p)
tail(box_p)
list.files(path = dir_gv, pattern = ".csv", full.names = TRUE)
list.files(path = dir_gv, pattern = ".csv", full.names = TRUE) %>%
set_names(str_remove(string = basename(.), pattern = "raw.csv"))
list.files(path = dir_gv, pattern = ".csv", full.names = TRUE) %>%
set_names(str_remove(string = basename(.), pattern = "raw.csv")) %>%
map(read.csv, stringsAsFactors = FALSE) %>%
bind_rows(.id = "sample")
list.files(path = dir_gv, pattern = ".csv", full.names = TRUE) %>%
set_names(str_remove(string = basename(.), pattern = "raw.csv")) %>%
map(read.csv, stringsAsFactors = FALSE) %>%
bind_rows(.id = "sample") %>%
separate(col = "sample", into = c("Museum", "Collection", "Specimen_ID"), sep = "-", extra = "merge") %>%
separate(col = "Specimen_ID", into = c("Specimen_ID", "Genus_species"), sep = "_", extra = "drop")
tail(box_p)
grepl("246803", Genus_species)
grepl("246803", box_p$Genus_species)
box_p[grepl("246803", box_p$Genus_species),]
tail(box_p)
# Join gray value data with specimen info
box_p <- subset(gv, Voxel_count <2500)
box_p <- box_p %>%
full_join(dat)
head(box_p)
tail(box_p)
## boxplot
box_p %>%
ggplot(aes(reorder(Genus_species, Voxel_count), Voxel_count, fill = factor(Days_stained))) +
geom_boxplot(shape = 1)
## boxplot
box_p %>%
ggplot(aes(reorder(Genus_species, Voxel_count), Voxel_count, fill = factor(Days_stained))) +
geom_boxplot(shape = 1) +
scale_fill_viridis_c(alpha=0.6, breaks = seq(3,12, by = 2), direction = -1, option = "inferno")
ggplot(aes(reorder(Genus_species, Voxel_count), Voxel_count, fill = Days_stained) +
)
## boxplot
box_p %>%
ggplot(aes(reorder(Genus_species, Voxel_count), Voxel_count, fill = Days_stained)) +
geom_boxplot(shape = 1) +
scale_fill_viridis_c(alpha=0.6, breaks = seq(3,12, by = 2), direction = -1, option = "inferno")
## boxplot
box_p %>%
ggplot(aes(reorder(Genus_species, Voxel_count), Voxel_count, fill = Days_stained)) +
geom_boxplot(shape = 1) +
scale_fill_viridis_c(alpha=0.6, breaks = seq(3,12, by = 2), direction = -1, option = "inferno") +
#geom_text(aes(label = Days_stained), position=position_dodge(width=0.9), vjust=-0.25) +
theme_classic() +
labs(x = "", y = "", fill = "Days") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, face = "italic", size = 25),
axis.line.x = element_line(colour = 'black', size = 2),
axis.ticks.x = element_line(colour = "black", size = 2),
axis.line.y = element_line(colour = 'black', size = 2),
axis.ticks.y = element_line(colour = "black", size = 2),
text = element_text(size = 20))
## boxplot
box_p %>%
ggplot(aes(reorder(G_species, Voxel_count), Voxel_count, fill = Days_stained)) +
geom_boxplot(shape = 1) +
scale_fill_viridis_c(alpha=0.6, breaks = seq(3,12, by = 2), direction = -1, option = "inferno") +
#geom_text(aes(label = Days_stained), position=position_dodge(width=0.9), vjust=-0.25) +
theme_classic() +
labs(x = "", y = "", fill = "Days") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, face = "italic", size = 25),
axis.line.x = element_line(colour = 'black', size = 2),
axis.ticks.x = element_line(colour = "black", size = 2),
axis.line.y = element_line(colour = 'black', size = 2),
axis.ticks.y = element_line(colour = "black", size = 2),
text = element_text(size = 20))
## boxplot
box_p %>%
ggplot(aes(reorder(Specimen_ID, Voxel_count), Voxel_count, fill = Days_stained)) +
geom_boxplot(shape = 1) +
scale_fill_viridis_c(alpha=0.6, breaks = seq(3,12, by = 2), direction = -1, option = "inferno") +
#geom_text(aes(label = Days_stained), position=position_dodge(width=0.9), vjust=-0.25) +
theme_classic() +
labs(x = "", y = "", fill = "Days") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, face = "italic", size = 25),
axis.line.x = element_line(colour = 'black', size = 2),
axis.ticks.x = element_line(colour = "black", size = 2),
axis.line.y = element_line(colour = 'black', size = 2),
axis.ticks.y = element_line(colour = "black", size = 2),
text = element_text(size = 20))
## boxplot
box_p %>%
ggplot(aes(reorder(Taxon_ID, Voxel_count), Voxel_count, fill = Days_stained)) +
geom_boxplot(shape = 1) +
scale_fill_viridis_c(alpha=0.6, breaks = seq(3,12, by = 2), direction = -1, option = "inferno") +
#geom_text(aes(label = Days_stained), position=position_dodge(width=0.9), vjust=-0.25) +
theme_classic() +
labs(x = "", y = "", fill = "Days") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, face = "italic", size = 25),
axis.line.x = element_line(colour = 'black', size = 2),
axis.ticks.x = element_line(colour = "black", size = 2),
axis.line.y = element_line(colour = 'black', size = 2),
axis.ticks.y = element_line(colour = "black", size = 2),
text = element_text(size = 20))
## Load in raw gray value data
gv <- list.files(path = dir_gv, pattern = ".csv", full.names = TRUE) %>%
set_names(str_remove(string = basename(.), pattern = "raw.csv")) %>%
map(read.csv, stringsAsFactors = FALSE) %>%
bind_rows(.id = "sample") %>%
separate(col = "sample", into = c("Museum", "Collection", "Specimen_ID"), sep = "-", extra = "merge") %>%
separate(col = "Specimen_ID", into = c("Specimen_ID", "Genus_species"), sep = "_", extra = "drop") %>%
#separate(col = "Genus_species", into = c("Genus", "Species"), sep = "-", extra = "merge") %>%
select(Museum, Specimen_ID, Genus_species, Gray_value = `ï..Gray.value`, Voxel_count = `Voxel.count`) %>%
mutate(Gray_value = str_remove(string = Gray_value, pattern = "> ")) %>%
mutate(Genus_species = str_replace(string = Genus_species, pattern = "-", replacement = "_")) %>%
mutate(Museum = str_to_upper(Museum))
# Change char class to numeric for some columns
gv$Gray_value <- as.numeric(gv$Gray_value)
gv$Gray_value <- round(gv$Gray_value)
gv$Specimen_ID <- as.numeric(gv$Specimen_ID)
# Join gray value data with specimen info
box_p <- subset(gv, Voxel_count <2500)
box_p <- box_p %>%
full_join(dat)
head(box_p)
tail(box_p)
## boxplot
box_p %>%
ggplot(aes(reorder(Taxon_ID, Voxel_count), Voxel_count, fill = Days_stained)) +
geom_boxplot(shape = 1) +
scale_fill_viridis_c(alpha=0.6, breaks = seq(3,12, by = 2), direction = -1, option = "inferno") +
#geom_text(aes(label = Days_stained), position=position_dodge(width=0.9), vjust=-0.25) +
theme_classic() +
labs(x = "", y = "", fill = "Days") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, face = "italic", size = 25),
axis.line.x = element_line(colour = 'black', size = 2),
axis.ticks.x = element_line(colour = "black", size = 2),
axis.line.y = element_line(colour = 'black', size = 2),
axis.ticks.y = element_line(colour = "black", size = 2),
text = element_text(size = 20))
# save boxplot
ggsave(filename = "boxplot2.png",
device = "png",
path = normalizePath(dir_plots),
plot = pbox,
width = 520,
height = 150,
units = "mm")
## boxplot
bp <- box_p %>%
ggplot(aes(reorder(Taxon_ID, Voxel_count), Voxel_count, fill = Days_stained)) +
geom_boxplot(shape = 1) +
scale_fill_viridis_c(alpha=0.6, breaks = seq(3,12, by = 2), direction = -1, option = "inferno") +
#geom_text(aes(label = Days_stained), position=position_dodge(width=0.9), vjust=-0.25) +
theme_classic() +
labs(x = "", y = "", fill = "Days") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, face = "italic", size = 25),
axis.line.x = element_line(colour = 'black', size = 2),
axis.ticks.x = element_line(colour = "black", size = 2),
axis.line.y = element_line(colour = 'black', size = 2),
axis.ticks.y = element_line(colour = "black", size = 2),
text = element_text(size = 20))
# save boxplot
ggsave(filename = "boxplot2.png",
device = "png",
path = normalizePath(dir_plots),
plot = bp,
width = 520,
height = 150,
units = "mm")
### Relationship between staining and specimen size
## Linear regression
head <- lm(log(Days_stained) ~ log(Head_radius_mm), dat) # head radius linear model
head_r2 <- round(summary(head)$r.squared, 2) # save r squared value
mass <- lm(log(Days_stained) ~ log(Mass_g), dat) # mass
mass_r2 <- round(summary(mass)$r.squared, 2)
svl <- lm(log(Days_stained) ~ log(SVL_mm), dat) # svl
svl_r2 <- round(summary(svl)$r.squared, 2)
age <- lm(log(Days_stained) ~ log(Preservation_age), dat)
summary(age)

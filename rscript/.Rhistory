### Load packages
# Install packages before loading them using this function 'install.packages("packageName")'
library(tidyverse)
library(tidyverse)
library(magrittr)
library(ggplot2)
library(cowplot)
library(RColorBrewer)
library(grid)
library(viridisLite)
### Set working dir
### Type in  your own path in the quotation marks
dir <- "C:/Users/jmcr/Documents/guide-diceCT-snakes/data/" # specimen list location
dir_gv <- "C:/Users/jmcr/Documents/guide-diceCT-snakes/data/Raw_grayValue_data/" # grayvalue location
dir_plots <- "C:/Users/jmcr/Documents/guide-diceCT-snakes/plots/"
### Load data
# Loads in datasheet with specimen list (includes taxonomy, staining duration and size measurements)
dat <- read_csv(paste0(dir, "specimen_list.csv"), col_names = TRUE) %>%
select(Taxon_family, Genus, Species, G_species, RAB = `RAB #`, Taxon_name, Taxon_ID, Museum, Specimen = `Specimen #`,
SVL_mm, Mass_g, Head_diameter_mm = HeadGirth_mm, Days_stained = `Days Stained`, Preservation_age) %>%
mutate(Head_radius_mm = Head_diameter_mm/2,
Head_diffusion_rate = Days_stained/Head_radius_mm) %>%
arrange(Taxon_family, Genus, Species)
### Summarise specimen data
dat %>% group_by(Taxon_family) %>% count() # total number of specimens per family
mean(dat$Head_diffusion_rate) # mean rate of iodine diffusion for the head
sd(dat$Head_diffusion_rate)
## Load in raw gray value data
# I had to manually change some of the file names to make sure this worked
gv <- list.files(path = dir_gv, pattern = ".csv", full.names = TRUE) %>%
set_names(str_remove(string = basename(.), pattern = "raw.csv")) %>%
map(read.csv, stringsAsFactors = FALSE) %>%
bind_rows(.id = "sample") %>%
separate(col = "sample", into = c("Museum", "Collection", "Specimen_ID"), sep = "-", extra = "merge") %>%
separate(col = "Specimen_ID", into = c("Specimen_ID", "Genus_species"), sep = "_", extra = "drop") %>%
#separate(col = "Genus_species", into = c("Genus", "Species"), sep = "-", extra = "merge") %>%
select(Museum, Specimen_ID, Genus_species, Gray_value = `Ã¯..Gray.value`, Voxel_count = `Voxel.count`) %>%
mutate(Gray_value = str_remove(string = Gray_value, pattern = "> ")) %>%
mutate(Genus_species = str_replace(string = Genus_species, pattern = "-", replacement = "_")) %>%
mutate(Museum = str_to_upper(Museum))
# Change char class to numeric for some columns
gv$Gray_value <- as.numeric(gv$Gray_value)
gv$Gray_value <- round(gv$Gray_value)
gv$Specimen_ID <- as.numeric(gv$Specimen_ID)
## boxplot
pbox <- gv %>%
filter(Voxel_count < 2500) %>%
ggplot(aes(reorder(G_species, Voxel_count), Voxel_count)) +
#ggplot(aes(G_species,Voxel_count, fill = Days_stained)) +
geom_boxplot(shape = 1) +
scale_fill_viridis_c(alpha=0.6, breaks = seq(3, 12, by = 2), direction = -1, option = "inferno") +
theme_classic() +
labs(x = "", y = "", fill = "Days") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, face = "italic", size = 25),
axis.line.x = element_line(colour = 'black', size = 2),
axis.ticks.x = element_line(colour = "black", size = 2),
axis.line.y = element_line(colour = 'black', size = 2),
axis.ticks.y = element_line(colour = "black", size = 2),
text = element_text(size = 20))
pbox
## boxplot
pbox <- gv %>%
filter(Voxel_count < 2500) %>%
ggplot(aes(reorder(Genus_species, Voxel_count), Voxel_count)) +
#ggplot(aes(G_species,Voxel_count, fill = Days_stained)) +
geom_boxplot(shape = 1) +
scale_fill_viridis_c(alpha=0.6, breaks = seq(3, 12, by = 2), direction = -1, option = "inferno") +
theme_classic() +
labs(x = "", y = "", fill = "Days") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, face = "italic", size = 25),
axis.line.x = element_line(colour = 'black', size = 2),
axis.ticks.x = element_line(colour = "black", size = 2),
axis.line.y = element_line(colour = 'black', size = 2),
axis.ticks.y = element_line(colour = "black", size = 2),
text = element_text(size = 20))
pbox
# Join gray value data with specimen info
gv_test <- gv %>%
left_join(dat)
## boxplot
pbox <- gv_test %>%
filter(Voxel_count < 2500) %>%
ggplot(aes(reorder(Genus_species, Voxel_count), Voxel_count, fill = Days_stained)) +
#ggplot(aes(G_species,Voxel_count, fill = Days_stained)) +
geom_boxplot(shape = 1) +
scale_fill_viridis_c(alpha=0.6, breaks = seq(3, 12, by = 2), direction = -1, option = "inferno") +
theme_classic() +
labs(x = "", y = "", fill = "Days") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, face = "italic", size = 25),
axis.line.x = element_line(colour = 'black', size = 2),
axis.ticks.x = element_line(colour = "black", size = 2),
axis.line.y = element_line(colour = 'black', size = 2),
axis.ticks.y = element_line(colour = "black", size = 2),
text = element_text(size = 20))
pbox
gv %>%
filter(Voxel_count < 2500) %>%
ggplot(aes(reorder(G_species, Voxel_count), Voxel_count, fill = Preservation_age)) +
geom_boxplot(shape = 1) +
#scale_fill_viridis_c(alpha=0.6, breaks = seq(0.5, 5, by = 0.5),
direction = -1, option = "inferno") +
theme_classic() +
labs(x = "", y = "", fill = "Days") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, face = "italic", size = 25),
axis.line.x = element_line(colour = 'black', size = 2),
axis.ticks.x = element_line(colour = "black", size = 2),
axis.line.y = element_line(colour = 'black', size = 2),
axis.ticks.y = element_line(colour = "black", size = 2),
text = element_text(size = 20))
gv %>%
filter(Voxel_count < 2500) %>%
ggplot(aes(reorder(G_species, Voxel_count), Voxel_count, fill = Preservation_age)) +
geom_boxplot(shape = 1) +
#scale_fill_viridis_c(alpha=0.6, breaks = seq(0.5, 5, by = 0.5), direction = -1, option = "inferno") +
theme_classic() +
labs(x = "", y = "", fill = "Days") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, face = "italic", size = 25),
axis.line.x = element_line(colour = 'black', size = 2),
axis.ticks.x = element_line(colour = "black", size = 2),
axis.line.y = element_line(colour = 'black', size = 2),
axis.ticks.y = element_line(colour = "black", size = 2),
text = element_text(size = 20))
## boxplot
pbox <- gv_test %>%
filter(Voxel_count < 2500) %>%
ggplot(aes(reorder(Genus_species, Voxel_count), Voxel_count, fill = Days_stained)) +
#ggplot(aes(G_species,Voxel_count, fill = Days_stained)) +
geom_boxplot(shape = 1) +
#scale_fill_viridis_c(alpha=0.6, breaks = seq(3, 12, by = 2), direction = -1, option = "inferno") +
theme_classic() +
labs(x = "", y = "", fill = "Days") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, face = "italic", size = 25),
axis.line.x = element_line(colour = 'black', size = 2),
axis.ticks.x = element_line(colour = "black", size = 2),
axis.line.y = element_line(colour = 'black', size = 2),
axis.ticks.y = element_line(colour = "black", size = 2),
text = element_text(size = 20))
pbox
## boxplot
pbox <- gv_test %>%
filter(Voxel_count < 2500) %>%
ggplot(aes(reorder(Genus_species, Voxel_count), Voxel_count, fill = Days_stained)) +
#ggplot(aes(G_species,Voxel_count, fill = Days_stained)) +
geom_boxplot(shape = 1) +
scale_fill_continuous() +
#scale_fill_viridis_c(alpha=0.6, breaks = seq(3, 12, by = 2), direction = -1, option = "inferno") +
theme_classic() +
labs(x = "", y = "", fill = "Days") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, face = "italic", size = 25),
axis.line.x = element_line(colour = 'black', size = 2),
axis.ticks.x = element_line(colour = "black", size = 2),
axis.line.y = element_line(colour = 'black', size = 2),
axis.ticks.y = element_line(colour = "black", size = 2),
text = element_text(size = 20))
pbox
## boxplot
pbox <- gv_test %>%
filter(Voxel_count < 2500) %>%
ggplot(aes(reorder(Genus_species, Voxel_count), Voxel_count, fill = Days_stained)) +
#ggplot(aes(G_species,Voxel_count, fill = Days_stained)) +
geom_boxplot(shape = 1) +
scale_fill_brewer() +
#scale_fill_viridis_c(alpha=0.6, breaks = seq(3, 12, by = 2), direction = -1, option = "inferno") +
theme_classic() +
labs(x = "", y = "", fill = "Days") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, face = "italic", size = 25),
axis.line.x = element_line(colour = 'black', size = 2),
axis.ticks.x = element_line(colour = "black", size = 2),
axis.line.y = element_line(colour = 'black', size = 2),
axis.ticks.y = element_line(colour = "black", size = 2),
text = element_text(size = 20))
pbox
View(gv_test)
## boxplot
pbox <- gv_test %>%
filter(Voxel_count < 2500) %>%
ggplot(aes(reorder(G_species, Days_stained), Voxel_count, fill = Days_stained)) +
#ggplot(aes(G_species,Voxel_count, fill = Days_stained)) +
geom_boxplot(shape = 1) +
scale_fill_viridis_c(alpha=0.6, breaks = seq(3, 12, by = 2), direction = -1, option = "inferno") +
theme_classic() +
labs(x = "", y = "", fill = "Days") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, face = "italic", size = 25),
axis.line.x = element_line(colour = 'black', size = 2),
axis.ticks.x = element_line(colour = "black", size = 2),
axis.line.y = element_line(colour = 'black', size = 2),
axis.ticks.y = element_line(colour = "black", size = 2),
text = element_text(size = 20))
pbox
## boxplot
pbox <- gv_test %>%
filter(Voxel_count < 2500) %>%
ggplot(aes(reorder(G_species, Voxel_count), Voxel_count, fill = Days_stained)) +
#ggplot(aes(G_species,Voxel_count, fill = Days_stained)) +
geom_boxplot(shape = 1) +
#scale_fill_viridis_c(alpha=0.6, breaks = seq(3, 12, by = 2), direction = -1, option = "inferno") +
theme_classic() +
labs(x = "", y = "", fill = "Days") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, face = "italic", size = 25),
axis.line.x = element_line(colour = 'black', size = 2),
axis.ticks.x = element_line(colour = "black", size = 2),
axis.line.y = element_line(colour = 'black', size = 2),
axis.ticks.y = element_line(colour = "black", size = 2),
text = element_text(size = 20))
pbox
## boxplot
pbox <- gv_test %>%
filter(Voxel_count < 2500) %>%
ggplot(aes(reorder(Genus_species, Voxel_count), Voxel_count, fill = Days_stained)) +
#ggplot(aes(G_species,Voxel_count, fill = Days_stained)) +
geom_boxplot(shape = 1) +
#scale_fill_viridis_c(alpha=0.6, breaks = seq(3, 12, by = 2), direction = -1, option = "inferno") +
theme_classic() +
labs(x = "", y = "", fill = "Days") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, face = "italic", size = 25),
axis.line.x = element_line(colour = 'black', size = 2),
axis.ticks.x = element_line(colour = "black", size = 2),
axis.line.y = element_line(colour = 'black', size = 2),
axis.ticks.y = element_line(colour = "black", size = 2),
text = element_text(size = 20))
pbox
